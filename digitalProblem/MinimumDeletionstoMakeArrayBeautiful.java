package leetcode.digitalProblem;

import java.util.ArrayList;
import java.util.Objects;

public class MinimumDeletionstoMakeArrayBeautiful {
    public static void main(String[] args){
        //int[] n = {2,2,2,2,2,2,2,2,2,2,2,2,2};
        int[] n = {4,6,0,1,0,1,5,6,3,2,6,0,1,6,5,9,5,9,9,6,3,5,3,9,7,7,3,7,3,4,8,9,8,2,2,7,0,8,5,3,5,0,5,2,0,3,1,6,2,3,5,6,8,3,3,6,5,8,1,3,8,9,3,7,8,4,1,7,3,8,4,7,2,6,9,5,4,7,8,9,4,6,4,3,2,4,1,0,0,1,2,0,4,6,1,3,8,3,1,5,3,3,2,7,5,7,7,6,4,2,3,4,4,5,7,4,5,3,0,0,0,1,7,1,2,6,5,8,9,5,8,3,4,4,8,4,4,0,7,4,2,6,0,9,5,8,7,7,0,6,7,3,7,1,5,8,2,8,1,2,7,2,5,7,2,8,9,1,2,9,2,1,0,9,7,4,6,1,5,7,7,7,9,1,6,2,6,2,6,2,9,3,2,5,4,8,0,9,3,1,2,9,1,8,7,7,6,7,5,1,0,7,7,2,1,7,2,1,2,3,4,4,8,4,9,7,5,0,7,8,2,6,6,2,1,4,3,7,3,8,7,1,5,3,9,7,2,2,5,1,6,6,0,5,7,2,4,3,5,3,3,1,5,6,4,6,9,5,0,5,1,4,1,8,9,9,3,3,8,0,1,8,8,4,1,0,2,5,6,7,7,7,2,9,7,0,1,6,6,0,6,3,1,4,8,2,7,7,0,7,2,8,9,0,4,3,8,0,8,1,7,0,9,1,2,7,1,6,5,6,0,1,6,4,3,7,7,4,5,2,2,8,9,8,3,2,1,6,2,5,0,9,3,0,4,7,0,3,6,8,5,3,3,3,1,8,9,7,1,6,7,6,6,2,0,8,8,6,1,8,4,8,4,6,5,6,8,3,6,7,4,7,8,6,5,2,2,1,5,4,4,5,2,0,3,4,0,4,4,2,2,7,0,2,2,9,1,6,1,4,7,0,9,2,0,5,4,9,4,0,2,2,5,7,8,3,5,5,5,0,6,9,4,7,6,1,7,3,4,1,0,9,5,4,4,8,9,0,3,7,4,7,0,9,9,8,1,7,6,2,4,4,6,4,3,6,2,4,3,3,6,1,9,1,9,7,2,4,3,5,0,9,9,0,3,5,5,0,6,0};
        System.out.println(minDeletion1(n));

    }

    public static int minDeletion1(int[] nums){
        int n = nums.length;
        //LinkedList<Integer> list = new LinkedList<>();
        ArrayList<Integer> list = new ArrayList<>();
        for(int num : nums){
            list.add(num);
        }
        int res = 0;
        int index = 1;
        for(int i = index; i < list.size(); i += 2){
            if (Objects.equals(list.get(i - 1),list.get(i))){
                list.remove(i);
                i -= 2;
                res++;
            }
        }
        if ((n - res) % 2 == 1) res++;
        System.out.println(list);
        return res;
    }
}
